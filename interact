#!/usr/bin/env php
<?php
require __DIR__ . '/vendor/autoload.php';

use Ruelo\DeepFace;

function prompt($message) {
    echo $message;
    return trim(fgets(STDIN));
}

echo "\n=== DeepFacePHP Interactive Shell ===\n";
echo "Type 'exit' to quit.\n\n";

/**
 * Function to verify two images
 * 
 */
function verify() {
    $img1 = prompt("Enter path to first image: ");
    $img2 = prompt("Enter path to second image: ");
    try {
        $result = DeepFace::compareImages($img1, $img2);
        print_r($result);
    } catch (Exception $e) {
        print_r([
            "message" => "Error: ".$e->getMessage()."\n",
        ]);
    }
}

/**
 * Function to analyze an image
 * 
 */
function analyze() {
    $img = prompt("Enter path to image: ");
    try {
        // Call analyzeImage with just the image path, using default python path
        $result = DeepFace::analyzeImage($img);
        echo "\nAnalysis Result:\n";
        print_r($result);
    } catch (Exception $e) {
        echo "Error: ".$e->getMessage()."\n";
    }
}

function test_base64()
{
    $file1 = __DIR__ . '/image1.txt'; // Contains base64 string
    $file2 = __DIR__ . '/image2.txt'; // Contains base64 string

    if (!file_exists($file1) || !file_exists($file2)) {
        echo "One or both base64 files not found.\n";
        return;
    }

    $base64Image1 = trim(file_get_contents($file1));
    $base64Image2 = trim(file_get_contents($file2));

    // Optionally, if they don't have the `data:image/...;base64,` prefix:
    if (strpos($base64Image1, 'data:image/') !== 0) {
        $base64Image1 = 'data:image/jpeg;base64,' . $base64Image1;
    }
    if (strpos($base64Image2, 'data:image/') !== 0) {
        $base64Image2 = 'data:image/jpeg;base64,' . $base64Image2;
    }

    try {
        $result = DeepFace::compareImages($base64Image1, $base64Image2);
        print_r($result);
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage() . "\n";
    }
}



while (true) {
    $action = prompt("Choose action ([v]erify, [a]nalyze, [q]uit): ");

    // Get all cases of the action
    switch(strtolower($action)){
        case 'v':
        case 'verify':
            verify();
            break;
        case 'a':
        case 'analyze':
            analyze();
            break;
        case 'test_base64':
            test_base64();
            break;
        case 'q':
        case 'exit':
        case 'quit':
            echo "Goodbye!\n";
            exit;
        case 'c':
        case 'clear':
            system('clear') || system('cls');
            break;
        default:
            echo "Unknown action. Please type 'verify', 'analyze', or 'quit'.\n";
    }
    
    echo "\n";
}